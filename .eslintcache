[{"C:\\Users\\victor.ajor\\Lamisplus_public\\ADR_Module\\src\\index.js":"1","C:\\Users\\victor.ajor\\Lamisplus_public\\ADR_Module\\src\\App.js":"2","C:\\Users\\victor.ajor\\Lamisplus_public\\ADR_Module\\src\\main\\webapp\\context\\ThemeContext.js":"3","C:\\Users\\victor.ajor\\Lamisplus_public\\ADR_Module\\src\\main\\webapp\\jsx\\components\\Home.js":"4","C:\\Users\\victor.ajor\\Lamisplus_public\\ADR_Module\\src\\main\\webapp\\context\\ThemeDemo.js":"5","C:\\Users\\victor.ajor\\Lamisplus_public\\ADR_Module\\src\\main\\webapp\\api.js":"6","C:\\Users\\victor.ajor\\Lamisplus_public\\ADR_Module\\src\\main\\webapp\\reportWebVitals.js":"7","C:\\Users\\victor.ajor\\Lamisplus_public\\ADR_Module\\src\\main\\webapp\\jsx\\components\\ADR\\ADRForm.js":"8","C:\\Users\\victor.ajor\\Lamisplus_public\\ADR_Module\\src\\main\\webapp\\jsx\\components\\ADR\\EditForm.js":"9","C:\\Users\\victor.ajor\\Lamisplus_public\\ADR_Module\\src\\main\\webapp\\jsx\\components\\ADR\\Drug.js":"10","C:\\Users\\victor.ajor\\Lamisplus_public\\ADR_Module\\src\\main\\webapp\\jsx\\components\\ADR\\DrugMedicine.js":"11","C:\\Users\\victor.ajor\\Lamisplus_public\\ADR_Module\\src\\main\\webapp\\jsx\\components\\ADR\\ADRList.js":"12","C:\\Users\\victor.ajor\\Lamisplus_public\\ADR_Module\\src\\main\\webapp\\jsx\\components\\ADR\\ClientList.js":"13","C:\\Users\\victor.ajor\\Lamisplus_public\\ADR_Module\\src\\main\\webapp\\utils\\utilityFunctions.js":"14"},{"size":739,"mtime":1681745916462,"results":"15","hashOfConfig":"16"},{"size":1053,"mtime":1718828391771,"results":"17","hashOfConfig":"16"},{"size":9235,"mtime":1681745916676,"results":"18","hashOfConfig":"16"},{"size":2142,"mtime":1718879436404,"results":"19","hashOfConfig":"16"},{"size":3056,"mtime":1681745916677,"results":"20","hashOfConfig":"16"},{"size":488,"mtime":1719485849535,"results":"21","hashOfConfig":"16"},{"size":375,"mtime":1681745919370,"results":"22","hashOfConfig":"16"},{"size":46225,"mtime":1719485812320,"results":"23","hashOfConfig":"16"},{"size":43467,"mtime":1719484074462,"results":"24","hashOfConfig":"16"},{"size":18659,"mtime":1719395691987,"results":"25","hashOfConfig":"16"},{"size":13994,"mtime":1719394303270,"results":"26","hashOfConfig":"16"},{"size":7492,"mtime":1719399814941,"results":"27","hashOfConfig":"16"},{"size":8040,"mtime":1719399532011,"results":"28","hashOfConfig":"16"},{"size":333,"mtime":1719484503867,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"xozx5w",{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"33"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"33"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"33"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"62","usedDeprecatedRules":"33"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"65","usedDeprecatedRules":"33"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\victor.ajor\\Lamisplus_public\\ADR_Module\\src\\index.js",["68"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <Router basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </Router>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n",["69","70"],"C:\\Users\\victor.ajor\\Lamisplus_public\\ADR_Module\\src\\App.js",["71"],"import React from \"react\";\r\nimport { MemoryRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nimport Home from \"./main/webapp/jsx/components/Home\";\r\nimport ADRForm from \"./main/webapp/jsx/components/ADR/ADRForm\";\r\nimport EditForm from \"./main/webapp/jsx/components/ADR/EditForm\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <ToastContainer />\r\n      {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n      <Switch>\r\n        <Route path=\"/edit-adr-form\">\r\n          <EditForm />\r\n        </Route>\r\n        <Route path=\"/adr-form\">\r\n          <ADRForm />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\ADR_Module\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\victor.ajor\\Lamisplus_public\\ADR_Module\\src\\main\\webapp\\jsx\\components\\Home.js",["72","73","74","75"],"import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Row, Col, Card, Tab, Tabs } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../api\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ClientList from \"./ADR/ClientList\";\r\nimport ADRList from \"./ADR/ADRList\";\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n  const [key, setKey] = useState(\"home\");\r\n  const [permissions, setPermissions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    userPermission();\r\n  }, []);\r\n\r\n  const userPermission = () => {\r\n    axios\r\n      .get(`${baseUrl}account`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setPermissions(response.data.permissions);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>ADR</h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <br />\r\n      <Row>\r\n        <Col xl={12}>\r\n          <Card style={divStyle}>\r\n            <Card.Body>\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                  id=\"controlled-tab-example\"\r\n                  activeKey={key}\r\n                  onSelect={(k) => setKey(k)}\r\n                  className=\"mb-3\"\r\n                >\r\n                  <Tab eventKey=\"home\" title=\"Patients\">\r\n                    <ClientList permissions={permissions} />\r\n                  </Tab>\r\n                  <Tab eventKey=\"hts\" title=\"ADR Patients\">\r\n                    <ADRList permissions={permissions} />\r\n                  </Tab>\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\ADR_Module\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\victor.ajor\\Lamisplus_public\\ADR_Module\\src\\main\\webapp\\api.js",[],"C:\\Users\\victor.ajor\\Lamisplus_public\\ADR_Module\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\victor.ajor\\Lamisplus_public\\ADR_Module\\src\\main\\webapp\\jsx\\components\\ADR\\ADRForm.js",["76","77","78","79","80","81","82","83","84","85"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport { Form, FormGroup, Label, Spinner } from \"reactstrap\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport Drug from \"./Drug\";\r\nimport DrugMedicine from \"./DrugMedicine\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport * as moment from \"moment\";\r\nimport {\r\n  validatePhoneNumber,\r\n  checkNumberLimit,\r\n} from \"../../../utils/utilityFunctions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {},\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    marginBottom: 20,\r\n    flexGrow: 1,\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n}));\r\n\r\nfunction ADRForm() {\r\n  const classes = useStyles();\r\n  const [saving, setSaving] = useState(false);\r\n  const [outcomes, setOutcomes] = useState([]);\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const [isValid, setIsValid] = useState(true);\r\n  const styles = {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  };\r\n  const [relevant, setRelevant] = useState([]);\r\n  const history = useHistory();\r\n  const patientInfo =\r\n    history.location && history.location.state\r\n      ? history.location.state.patientInfo\r\n      : {};\r\n\r\n  //console.log(state);\r\n  const {\r\n    firstName,\r\n    surname,\r\n    dateOfBirth,\r\n    sex,\r\n    uuid,\r\n    identifier,\r\n    organization,\r\n  } = patientInfo;\r\n\r\n  const adrOutcomes = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/ADVERSE_EVENT_OUTCOME`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setOutcomes(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n\r\n  const adrRelevant = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/ADR_PREEXISTING_MEDICAL_CONDITIONS`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setRelevant(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    adrOutcomes();\r\n    adrRelevant();\r\n    GetCountry();\r\n  }, []);\r\n\r\n  const calculate_age = (dob) => {\r\n    const today = new Date();\r\n    const dateParts = dob.split(\"-\");\r\n    const birthDate = new Date(dob);\r\n    let age_now = today.getFullYear() - birthDate.getFullYear();\r\n\r\n    return age_now;\r\n  };\r\n\r\n  const [bioData, setBioData] = useState({\r\n    weight: \"\",\r\n  });\r\n\r\n  const [adverseEffect, setAdverseEffect] = useState({\r\n    eventDescription: \"\",\r\n    death: false,\r\n    lifeThreatening: false,\r\n    hospitalization: \"\",\r\n    dateOfDeath: \"\",\r\n    disability: false,\r\n    anomaly: false,\r\n    intervention: false,\r\n    others: false,\r\n    otherDescription: \"\",\r\n    outcomes: \"\",\r\n    onsetDate: \"\",\r\n    stoppedDate: \"\",\r\n    outcomesOtherDescription: \"\",\r\n  });\r\n\r\n  const [severeDrugs, setSevereDrugs] = useState({\r\n    dosage: \"\",\r\n    frequency: \"\",\r\n    administrationRoute: \"\",\r\n    dateMedicationStarted: \"\",\r\n    dateMedicationStopped: \"\",\r\n    reactionReappeared: \"\",\r\n    reactionStopped: \"\",\r\n  });\r\n\r\n  const [concomitantMedicines, setConcomitantMedicines] = useState({\r\n    preexistingMedicalConditions: \"\",\r\n    preexistingMedicalOthers: \"\",\r\n  });\r\n\r\n  const [reporter, setReporter] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    address: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    phoneNumber: \"\",\r\n    healthProfessional: \"\",\r\n    occupation: \"\",\r\n    country: \"\",\r\n    email: \"\",\r\n    reportDate: \"\",\r\n  });\r\n\r\n  const handleBioInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setBioData({\r\n      ...bioData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleAdverseInputChange = (event) => {\r\n    const { name, value, type, checked } = event.target;\r\n    setAdverseEffect({\r\n      ...adverseEffect,\r\n      [name]: type === \"checkbox\" ? checked : value,\r\n    });\r\n  };\r\n\r\n  const handleMedicineInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setConcomitantMedicines({\r\n      ...concomitantMedicines,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleReporterInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === \"phoneNumber\" && value.length > 11) {\r\n      const acceptedNumber = checkNumberLimit(value);\r\n      if (validatePhoneNumber(acceptedNumber) !== true) {\r\n        toast.error(\"Reporter Phone number is not valid\");\r\n      } else {\r\n        value = acceptedNumber;\r\n      }\r\n    }\r\n    setReporter({\r\n      ...reporter,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const GetCountry = () => {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/0`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setCountries(response.data);\r\n        setStateByCountryId(response.data[0].id);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  //Get list of State\r\n  function setStateByCountryId(id) {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setStates(response.data.sort());\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  const validateInputs = () => {\r\n    const temp = { ...errors };\r\n    temp.firstName = reporter.firstName ? \"\" : \"First Name is required.\";\r\n    temp.lastName = reporter.lastName ? \"\" : \"Last Name is required.\";\r\n    temp.address = reporter.address ? \"\" : \"Address is required.\";\r\n    temp.city = reporter.city ? \"\" : \"City is required.\";\r\n    temp.state = reporter.state ? \"\" : \"State is required.\";\r\n    temp.phoneNumber = reporter.phoneNumber ? \"\" : \"Phone Number is required.\";\r\n    temp.healthProfessional = reporter.healthProfessional\r\n      ? \"\"\r\n      : \"Health Professional is required.\";\r\n    temp.occupation = reporter.occupation ? \"\" : \"Occupation is required.\";\r\n    temp.country = reporter.country ? \"\" : \"Country is required.\";\r\n    temp.email = reporter.email ? \"\" : \"Email is required.\";\r\n    temp.reportDate = reporter.reportDate ? \"\" : \"Report Date is required.\";\r\n\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n\r\n  const submitForm = () => {\r\n    const drugs = JSON.parse(localStorage.getItem(\"severeDrugs\"));\r\n    const medicines = JSON.parse(localStorage.getItem(\"medicine\"));\r\n\r\n    const severeDrugData = {\r\n      drugs: drugs,\r\n    };\r\n\r\n    const medicationData = {\r\n      medicines: medicines,\r\n      preexistingMedicalConditions:\r\n        concomitantMedicines.preexistingMedicalConditions,\r\n      preexistingMedicalOthers: concomitantMedicines.preexistingMedicalOthers,\r\n    };\r\n\r\n    const adrPayload = {\r\n      patientUuid: uuid,\r\n      weight: bioData.weight,\r\n      facilityId: organization?.id,\r\n      adverseEffect: adverseEffect,\r\n      severeDrug: severeDrugData,\r\n      concomitantMedicines: medicationData,\r\n      reporter: reporter,\r\n      reportDate: reporter.reportDate,\r\n    };\r\n\r\n    //console.log(adrPayload);\r\n    if (validateInputs()) {\r\n      axios\r\n        .post(`${baseUrl}adr/create`, adrPayload, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          console.log(\"res\", response);\r\n          toast.success(\"ADR Form Filled Successfully\");\r\n          localStorage.removeItem(\"severeDrugs\");\r\n          localStorage.removeItem(\"medicine\");\r\n          history.push(\"/\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(`${error.message}`);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <div className=\"row mb-12 col-md-12\" style={{ paddingBottom: \"5px\" }}>\r\n          <div className=\"mb-6 col-md-6\">\r\n            <Breadcrumbs aria-label=\"breadcrumb\">\r\n              <Typography style={{ color: \"#992E62\" }}>ADR</Typography>\r\n              <Typography style={{ color: \"#014d88\" }}>Registration</Typography>\r\n            </Breadcrumbs>\r\n          </div>\r\n          <div className=\"mb-6 col-md-6\">\r\n            <Link\r\n              to={{\r\n                pathname: \"/\",\r\n                state: \"\",\r\n              }}\r\n            >\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-right ms-1\"\r\n                style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                startIcon={<TiArrowBack />}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\" }}>Back </span>\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <Form>\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                <h5\r\n                  className=\"card-title\"\r\n                  style={{ color: \"#fff\", fontWeight: \"bolder\" }}\r\n                >\r\n                  Basic Information\r\n                </h5>\r\n              </div>\r\n              {/* basic info */}\r\n              <div className=\"card-body\">\r\n                <div className=\"basic-form\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"name\">Name </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"name\"\r\n                          id=\"name\"\r\n                          value={`${firstName} ${surname}`}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                          readOnly\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"dob\">DOB </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"dob\"\r\n                          id=\"dob\"\r\n                          value={dateOfBirth}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                          readOnly\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"age\">Age </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"age\"\r\n                          id=\"age\"\r\n                          value={calculate_age(dateOfBirth)}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                          readOnly\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"sex\">Sex </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"sex\"\r\n                          id=\"sex\"\r\n                          value={sex}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                          readOnly\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"hospitalNo\">Hospital Number</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"hospitalNo\"\r\n                          id=\"hospitalNo\"\r\n                          value={identifier.identifier[0].value}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                          readOnly\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"weight\">\r\n                          Weight <span style={{ color: \"red\" }}>*</span>\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"number\"\r\n                          name=\"weight\"\r\n                          id=\"weight\"\r\n                          onChange={handleBioInputChange}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* adverse event */}\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                <h5\r\n                  className=\"card-title\"\r\n                  style={{ color: \"#fff\", fontWeight: \"bolder\" }}\r\n                >\r\n                  Adverse Event\r\n                </h5>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <div className=\"basic-form\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-12\">\r\n                      <FormGroup>\r\n                        <Label for=\"eventDescription\">\r\n                          Describe Event <span style={{ color: \"red\" }}>*</span>\r\n                        </Label>\r\n                        <textarea\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"eventDescription\"\r\n                          id=\"eventDescription\"\r\n                          value={adverseEffect.eventDescription}\r\n                          rows={4}\r\n                          cols={60}\r\n                          onChange={handleAdverseInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014d88\",\r\n                            height: \"80px\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <h3 className=\"mb-3\">\r\n                      Seriousness of Adverse Event (check all that apply)\r\n                    </h3>\r\n                    <div className=\"form-group mb-3 col-md-2\">\r\n                      <FormGroup>\r\n                        <label>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            name=\"death\"\r\n                            checked={adverseEffect.death}\r\n                            onChange={handleAdverseInputChange}\r\n                          />{\" \"}\r\n                          Death\r\n                        </label>\r\n                      </FormGroup>\r\n                    </div>{\" \"}\r\n                    {adverseEffect.death === false ? (\r\n                      \"\"\r\n                    ) : (\r\n                      <div className=\"form-group mb-3 col-md-2\">\r\n                        <FormGroup>\r\n                          <Label for=\"dateOfDeath\">\r\n                            Death Date <span style={{ color: \"red\" }}>*</span>\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateOfDeath\"\r\n                            id=\"dateOfDeath\"\r\n                            value={adverseEffect.dateOfDeath}\r\n                            onChange={handleAdverseInputChange}\r\n                            style={{ border: \"1px solid #014d88\" }}\r\n                            min={adverseEffect.onsetDate}\r\n                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}{\" \"}\r\n                    <div className=\"form-group mb-3 col-md-2\">\r\n                      <FormGroup>\r\n                        <label>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            name=\"lifeThreatening\"\r\n                            checked={adverseEffect.lifeThreatening}\r\n                            onChange={handleAdverseInputChange}\r\n                          />{\" \"}\r\n                          Life threatening\r\n                        </label>\r\n                      </FormGroup>\r\n                    </div>{\" \"}\r\n                    <div className=\"form-group mb-3 col-md-2\">\r\n                      <FormGroup>\r\n                        <label>Hospitalization: </label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"hospitalization\"\r\n                          id=\"hospitalization\"\r\n                          value={adverseEffect.hospitalization}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                          onChange={handleAdverseInputChange}\r\n                        >\r\n                          <option value=\"\">--Please choose an option--</option>\r\n                          <option value=\"Initial\">Initial</option>\r\n                          <option value=\"Prolonged\">Prolonged</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>{\" \"}\r\n                    <div className=\"form-group mb-3 col-md-2\">\r\n                      <FormGroup>\r\n                        <label>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            name=\"disability\"\r\n                            checked={adverseEffect.disability}\r\n                            onChange={handleAdverseInputChange}\r\n                          />{\" \"}\r\n                          Disability or Permanent Damage\r\n                        </label>\r\n                      </FormGroup>\r\n                    </div>{\" \"}\r\n                    <div className=\"form-group mb-3 col-md-2\">\r\n                      <FormGroup>\r\n                        <label>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            name=\"anomaly\"\r\n                            checked={adverseEffect.anomaly}\r\n                            onChange={handleAdverseInputChange}\r\n                          />{\" \"}\r\n                          Congenital Anomaly/Birth Defects\r\n                        </label>\r\n                      </FormGroup>\r\n                    </div>{\" \"}\r\n                    <div className=\"form-group mb-3 col-md-2\">\r\n                      <FormGroup>\r\n                        <label>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            name=\"intervention\"\r\n                            checked={adverseEffect.intervention}\r\n                            onChange={handleAdverseInputChange}\r\n                          />{\" \"}\r\n                          Require Intervention to Permanent Impairment or\r\n                          Disability (Devices)\r\n                        </label>\r\n                      </FormGroup>\r\n                    </div>{\" \"}\r\n                    <div className=\"form-group mb-3 col-md-2\">\r\n                      <FormGroup>\r\n                        <label>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            name=\"others\"\r\n                            checked={handleAdverseInputChange.others}\r\n                            onChange={handleAdverseInputChange}\r\n                          />{\" \"}\r\n                          Others\r\n                        </label>\r\n                      </FormGroup>\r\n                    </div>{\" \"}\r\n                    {adverseEffect.eventDescription === \"\" ? (\r\n                      \"\"\r\n                    ) : (\r\n                      <div className=\"form-group  col-md-2\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Outcomes <span style={{ color: \"red\" }}>*</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"outcomes\"\r\n                            id=\"outcomes\"\r\n                            style={{ border: \"1px solid #014d88\" }}\r\n                            value={adverseEffect.outcomes}\r\n                            onChange={handleAdverseInputChange}\r\n                          >\r\n                            <option value=\"\">\r\n                              --Please choose an option--\r\n                            </option>\r\n                            {outcomes?.map((outcome, index) => (\r\n                              <option key={outcome.code} value={outcome.code}>\r\n                                {outcome.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}{\" \"}\r\n                    {adverseEffect.outcomes === \"\" ? (\r\n                      \"\"\r\n                    ) : (\r\n                      <div className=\"form-group mb-3 col-md-2\">\r\n                        <FormGroup>\r\n                          <Label for=\"onsetDate\">\r\n                            Onset Date of Event{\" \"}\r\n                            <span style={{ color: \"red\" }}>*</span>\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"onsetDate\"\r\n                            id=\"onsetDate\"\r\n                            value={adverseEffect.onsetDate}\r\n                            onChange={handleAdverseInputChange}\r\n                            style={{ border: \"1px solid #014d88\" }}\r\n                            min={dateOfBirth}\r\n                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {adverseEffect.onsetDate !== \"\" && (\r\n                      <div className=\"form-group mb-3 col-md-2\">\r\n                        <FormGroup>\r\n                          <Label for=\"stoppedDate\">\r\n                            Stop Date of Event{\" \"}\r\n                            <span style={{ color: \"red\" }}>*</span>\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"stoppedDate\"\r\n                            id=\"stoppedDate\"\r\n                            value={adverseEffect.stoppedDate}\r\n                            onChange={handleAdverseInputChange}\r\n                            style={{ border: \"1px solid #014d88\" }}\r\n                            min={adverseEffect.onsetDate}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {/* <row> */}{\" \"}\r\n                    {adverseEffect.others === false ? (\r\n                      \" \"\r\n                    ) : (\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                          <Label for=\"otherDescription\">\r\n                            Others Description{\" \"}\r\n                            <span style={{ color: \"red\" }}>*</span>\r\n                          </Label>\r\n                          <textarea\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"otherDescription\"\r\n                            id=\"otherDescription\"\r\n                            value={adverseEffect.otherDescription}\r\n                            onChange={handleAdverseInputChange}\r\n                            style={{\r\n                              border: \"1px solid #014d88\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}{\" \"}\r\n                    {adverseEffect.outcomes ===\r\n                    \"ADVERSE_EVENT_OUTCOME_OTHERS_(SPECIFY)\" ? (\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                          <Label for=\"outcomesOtherDescription\">\r\n                            Outcomes Others Description{\" \"}\r\n                            <span style={{ color: \"red\" }}>*</span>\r\n                          </Label>\r\n                          <textarea\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"outcomesOtherDescription\"\r\n                            id=\"outcomesOtherDescription\"\r\n                            value={adverseEffect.outcomesOtherDescription}\r\n                            onChange={handleAdverseInputChange}\r\n                            style={{\r\n                              border: \"1px solid #014d88\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    {/* </row> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* suspected drug */}\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                <h5\r\n                  className=\"card-title\"\r\n                  style={{ color: \"#fff\", fontWeight: \"bolder\" }}\r\n                >\r\n                  Suspected Drug\r\n                </h5>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <div className=\"basic-form\">\r\n                  <div className=\"row\">\r\n                    <h3>Product Details</h3>\r\n                    <Drug adverseEffect={adverseEffect} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Concomitant Medicines */}\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                <h5\r\n                  className=\"card-title\"\r\n                  style={{ color: \"#fff\", fontWeight: \"bolder\" }}\r\n                >\r\n                  Concomitant Medicines\r\n                </h5>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <div className=\"basic-form\">\r\n                  <div className=\"row\">\r\n                    <h3>All medicines taken within the last 3 months</h3>\r\n\r\n                    <DrugMedicine />\r\n\r\n                    <h3>Other Relevant History</h3>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Preexisting Medical Conditions{\" \"}\r\n                          {/* <span style={{ color: \"red\" }}>*</span> */}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"preexistingMedicalConditions\"\r\n                          id=\"preexistingMedicalConditions\"\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                          value={\r\n                            concomitantMedicines.preexistingMedicalConditions\r\n                          }\r\n                          onChange={handleMedicineInputChange}\r\n                        >\r\n                          <option value=\"\">--Please choose an option--</option>\r\n                          {relevant.map((outcome, index) => (\r\n                            <option key={outcome.code} value={outcome.code}>\r\n                              {outcome.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {concomitantMedicines.preexistingMedicalConditions !==\r\n                    \"ADR_PREEXISTING_MEDICAL_CONDITIONS_OTHERS_(SPECIFY)\" ? (\r\n                      \"\"\r\n                    ) : (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"preexistingMedicalOthers\">\r\n                            Preexisting Medical Other Description{\" \"}\r\n                            <span style={{ color: \"red\" }}>*</span>\r\n                          </Label>\r\n                          <textarea\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"preexistingMedicalOthers\"\r\n                            id=\"preexistingMedicalOthers\"\r\n                            value={adverseEffect.preexistingMedicalOthers}\r\n                            onChange={handleMedicineInputChange}\r\n                            style={{\r\n                              border: \"1px solid #014d88\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* Reporter */}\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                <h5\r\n                  className=\"card-title\"\r\n                  style={{ color: \"#fff\", fontWeight: \"bolder\" }}\r\n                >\r\n                  Reporter Section\r\n                </h5>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <div className=\"basic-form\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          First name <span style={{ color: \"red\" }}>*</span>\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"firstName\"\r\n                          id=\"firstName\"\r\n                          value={reporter.firstName}\r\n                          onChange={handleReporterInputChange}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                        />\r\n                        {errors.firstName !== \"\" ? (\r\n                          <span style={styles}>{errors.firstName}</span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Last Name <span style={{ color: \"red\" }}>*</span>\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"lastName\"\r\n                          id=\"lastName\"\r\n                          value={reporter.lastName}\r\n                          onChange={handleReporterInputChange}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                        />\r\n                        {errors.lastName !== \"\" ? (\r\n                          <span style={styles}>{errors.lastName}</span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Address <span style={{ color: \"red\" }}>*</span>\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"address\"\r\n                          id=\"address\"\r\n                          value={reporter.address}\r\n                          onChange={handleReporterInputChange}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                        />\r\n                        {errors.address !== \"\" ? (\r\n                          <span style={styles}>{errors.address}</span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"country\">\r\n                          Country <span style={{ color: \"red\" }}>*</span>\r\n                        </Label>\r\n\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"country\"\r\n                          id=\"country\"\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                          value={reporter.country}\r\n                          onChange={handleReporterInputChange}\r\n                        >\r\n                          <option value=\"\">--Please choose an option--</option>\r\n                          {countries.map((value, index) => (\r\n                            <option key={index} value={value.name}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n\r\n                        {/* <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"country\"\r\n                          id=\"country\"\r\n                          value={reporter.country}\r\n                          onChange={handleReporterInputChange}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                        /> */}\r\n                        {errors.country !== \"\" ? (\r\n                          <span style={styles}>{errors.country}</span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"state\">\r\n                          State <span style={{ color: \"red\" }}>*</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"state\"\r\n                          id=\"state\"\r\n                          value={reporter.state}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          onChange={handleReporterInputChange}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {states.map((value, index) => (\r\n                            <option key={index} value={value.name}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {/* <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"state\"\r\n                          id=\"state\"\r\n                          value={reporter.state}\r\n                          onChange={handleReporterInputChange}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                        /> */}\r\n                        {errors.state !== \"\" ? (\r\n                          <span style={styles}>{errors.state}</span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">\r\n                          City <span style={{ color: \"red\" }}>*</span>\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"city\"\r\n                          id=\"city\"\r\n                          value={reporter.city}\r\n                          onChange={handleReporterInputChange}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                        />\r\n                        {errors.city !== \"\" ? (\r\n                          <span style={styles}>{errors.city}</span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Phone Number <span style={{ color: \"red\" }}>*</span>\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"number\"\r\n                          name=\"phoneNumber\"\r\n                          id=\"phoneNumber\"\r\n                          value={reporter.phoneNumber}\r\n                          onChange={handleReporterInputChange}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                          pattern=\"[0-9]{9}\"\r\n                          title=\"Please enter valid phone number\"\r\n                        />\r\n                        {errors.phoneNumber !== \"\" ? (\r\n                          <span style={styles}>{errors.phoneNumber}</span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Email <span style={{ color: \"red\" }}>*</span>\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"email\"\r\n                          name=\"email\"\r\n                          id=\"email\"\r\n                          value={reporter.email}\r\n                          onChange={handleReporterInputChange}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                        />\r\n                        {errors.email !== \"\" ? (\r\n                          <span style={styles}>{errors.email}</span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Health Professional{\" \"}\r\n                          <span style={{ color: \"red\" }}>*</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"healthProfessional\"\r\n                          id=\"healthProfessional\"\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                          value={reporter.healthProfessional}\r\n                          onChange={handleReporterInputChange}\r\n                        >\r\n                          <option value=\"\">--Please choose an option--</option>\r\n                          <option value=\"Yes\">Yes</option>\r\n                          <option value=\"No\">No</option>\r\n                        </select>\r\n                        {errors.healthProfessional !== \"\" ? (\r\n                          <span style={styles}>\r\n                            {errors.healthProfessional}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Occupation <span style={{ color: \"red\" }}>*</span>\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"occupation\"\r\n                          id=\"occupation\"\r\n                          value={reporter.occupation}\r\n                          onChange={handleReporterInputChange}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                        />\r\n                        {errors.occupation !== \"\" ? (\r\n                          <span style={styles}>{errors.occupation}</span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Report Date <span style={{ color: \"red\" }}>*</span>\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          name=\"reportDate\"\r\n                          id=\"reportDate\"\r\n                          value={reporter.reportDate}\r\n                          onChange={handleReporterInputChange}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                          max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        />\r\n                        {errors.reportDate !== \"\" ? (\r\n                          <span style={styles}>{errors.reportDate}</span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <row>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className=\" float-right ms-1\"\r\n                        style={{\r\n                          backgroundColor: \"#014d88\",\r\n                          fontWeight: \"bolder\",\r\n                        }}\r\n                        startIcon={<SaveIcon />}\r\n                        onClick={submitForm}\r\n                      >\r\n                        {!saving ? (\r\n                          <span style={{ textTransform: \"capitalize\" }}>\r\n                            Save\r\n                          </span>\r\n                        ) : (\r\n                          <span style={{ textTransform: \"capitalize\" }}>\r\n                            Saving...\r\n                          </span>\r\n                        )}\r\n                      </Button>\r\n                    </row>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ADRForm;\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\ADR_Module\\src\\main\\webapp\\jsx\\components\\ADR\\EditForm.js",["86","87","88","89","90","91","92"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport { Form, FormGroup, Label, Spinner } from \"reactstrap\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport Drug from \"./Drug\";\r\nimport DrugMedicine from \"./DrugMedicine\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport * as moment from \"moment\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {},\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    marginBottom: 20,\r\n    flexGrow: 1,\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n}));\r\n\r\nfunction EditForm() {\r\n  const classes = useStyles();\r\n  const [saving, setSaving] = useState(false);\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [adr, setAdr] = useState({\r\n    weight: \"\",\r\n    eventDescription: \"\",\r\n    death: false,\r\n    lifeThreatening: false,\r\n    hospitalization: \"\",\r\n    dateOfDeath: \"\",\r\n    disability: false,\r\n    anomaly: false,\r\n    intervention: false,\r\n    others: false,\r\n    otherDescription: \"\",\r\n    outcomes: \"\",\r\n    onsetDate: \"\",\r\n    stoppedDate: \"\",\r\n    outcomesOtherDescription: \"\",\r\n    dosage: \"\",\r\n    frequency: \"\",\r\n    administrationRoute: \"\",\r\n    dateMedicationStarted: \"\",\r\n    dateMedicationStopped: \"\",\r\n    reactionReappeared: \"\",\r\n    reactionStopped: \"\",\r\n    relevantTest: \"\",\r\n    relevantTestDate: \"\",\r\n    relevantResult: \"\",\r\n    relevantResultDate: \"\",\r\n    preexistingMedicalConditions: \"\",\r\n    preexistingMedicalOthers: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    address: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    phoneNumber: \"\",\r\n    healthProfessional: \"\",\r\n    occupation: \"\",\r\n    country: \"\",\r\n    email: \"\",\r\n    reportDate: \"\",\r\n  });\r\n\r\n  const [outcomes, setOutcomes] = useState([]);\r\n  const [relevant, setRelevant] = useState([]);\r\n\r\n  const history = useHistory();\r\n  const patientInfo =\r\n    history.location && history.location.state\r\n      ? history.location.state.patientInfo\r\n      : {};\r\n\r\n  const { firstName, surname, dob, sex, hospitalNumber, patientUuid } =\r\n    patientInfo;\r\n\r\n  const adrOutcomes = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/ADVERSE_EVENT_OUTCOME`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setOutcomes(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n\r\n  const adrRelevant = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/ADR_PREEXISTING_MEDICAL_CONDITIONS`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setRelevant(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n\r\n  const getADRbyId = async () => {\r\n    const response = await axios\r\n      .get(`${baseUrl}adr/${patientUuid}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        const data = response.data.details;\r\n        //console.log(data);\r\n\r\n        setAdr({\r\n          weight: data?.weight,\r\n          eventDescription: data?.adverseEffect?.eventDescription,\r\n          death: data?.adverseEffect?.death,\r\n          lifeThreatening: data?.adverseEffect?.lifeThreatening,\r\n          hospitalization: data?.adverseEffect?.hospitalization,\r\n          dateOfDeath: data?.adverseEffect?.dateOfDeath,\r\n          disability: data?.adverseEffect?.disability,\r\n          anomaly: data?.adverseEffect?.anomaly,\r\n          intervention: data?.adverseEffect?.intervention,\r\n          others: data?.adverseEffect?.others,\r\n          otherDescription: data?.adverseEffect?.otherDescription,\r\n          outcomes: data?.adverseEffect?.outcomes,\r\n          onsetDate: data?.adverseEffect?.onsetDate,\r\n          stoppedDate: data?.adverseEffect?.stoppedDate,\r\n          outcomesOtherDescription:\r\n            data?.adverseEffect?.outcomesOtherDescription,\r\n          drugs: data?.severeDrugs?.drugs,\r\n          dosage: data?.severeDrugs?.dosage,\r\n          frequency: data?.severeDrugs?.frequency,\r\n          administrationRoute: data?.severeDrugs?.administrationRoute,\r\n          dateMedicationStarted: data?.severeDrugs?.dateMedicationStarted,\r\n          dateMedicationStopped: data?.severeDrugs?.dateMedicationStopped,\r\n          reactionReappeared: data?.severeDrugs?.reactionReappeared,\r\n          reactionStopped: data?.severeDrugs?.reactionStopped,\r\n          relevantTest: data?.concomitantMedicines?.relevantTest,\r\n          relevantTestDate: data?.concomitantMedicines?.relevantTestDate,\r\n          medicines: data?.concomitantMedicines?.medicines,\r\n          relevantResult: data?.concomitantMedicines?.relevantResult,\r\n          relevantResultDate: data?.concomitantMedicines?.relevantResultDate,\r\n          preexistingMedicalConditions:\r\n            data?.concomitantMedicines?.preexistingMedicalConditions,\r\n          preexistingMedicalOthers:\r\n            data?.concomitantMedicines?.preexistingMedicalOthers,\r\n          firstName: data?.reporter?.firstName,\r\n          lastName: data?.reporter?.lastName,\r\n          address: data?.reporter?.address,\r\n          city: data?.reporter?.city,\r\n          state: data?.reporter?.state,\r\n          phoneNumber: data?.reporter?.phoneNumber,\r\n          healthProfessional: data?.reporter?.healthProfessional,\r\n          occupation: data?.reporter?.occupation,\r\n          country: data?.reporter?.country,\r\n          email: data?.reporter?.email,\r\n          reportDate: data?.reportDate,\r\n        });\r\n      });\r\n  };\r\n\r\n  const GetCountry = () => {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/0`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setCountries(response.data);\r\n        setStateByCountryId(response.data[0].id);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  //Get list of State\r\n  function setStateByCountryId(id) {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setStates(response.data.sort());\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getADRbyId();\r\n    adrOutcomes();\r\n    adrRelevant();\r\n    GetCountry();\r\n  }, []);\r\n\r\n  const calculate_age = (dob) => {\r\n    const today = new Date();\r\n    const birthDate = new Date(dob);\r\n    let age_now = today.getFullYear() - birthDate.getFullYear();\r\n\r\n    return age_now;\r\n  };\r\n\r\n  const handleBioInputChange = (event) => {\r\n    const { name, value, type, checked } = event.target;\r\n    setAdr({\r\n      ...adr,\r\n      [name]: type === \"checkbox\" ? checked : value,\r\n    });\r\n  };\r\n\r\n  const submitForm = () => {\r\n    const payload = {\r\n      adverseEffect: {\r\n        anomaly: adr.anomaly,\r\n        dateOfDeath: adr.dateOfDeath,\r\n        death: adr.death,\r\n        disability: adr.disability,\r\n        eventDescription: adr.eventDescription,\r\n        hospitalization: adr.hospitalization,\r\n        intervention: adr.intervention,\r\n        lifeThreatening: adr.lifeThreatening,\r\n        onsetDate: adr.onsetDate,\r\n        otherDescription: adr.otherDescription,\r\n        others: adr.others,\r\n        outcomes: adr.outcomes,\r\n        outcomesOtherDescription: adr.outcomesOtherDescription,\r\n        stoppedDate: adr.stoppedDate,\r\n      },\r\n      concomitantMedicines: {\r\n        medicines: adr.medicines,\r\n        preexistingMedicalConditions: adr.preexistingMedicalConditions,\r\n        preexistingMedicalOthers: adr.preexistingMedicalOthers,\r\n      },\r\n      patientUuid: patientUuid,\r\n      reporter: {\r\n        address: adr.address,\r\n        city: adr.city,\r\n        country: adr.country,\r\n        email: adr.email,\r\n        firstName: adr.firstName,\r\n        healthProfessional: adr.healthProfessional,\r\n        lastName: adr.lastName,\r\n        occupation: adr.occupation,\r\n        phoneNumber: adr.phoneNumber,\r\n        state: adr.state,\r\n      },\r\n      severeDrug: {\r\n        drugs: adr.drugs,\r\n      },\r\n      weight: adr.weight,\r\n      reportDate: adr.reportDate,\r\n    };\r\n\r\n    console.log(payload);\r\n    axios\r\n      .put(`${baseUrl}adr/update/${patientUuid}`, payload, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(\"res\", response);\r\n        toast.success(\"ADR Form Filled Successfully\");\r\n        localStorage.removeItem(\"severeDrugs\");\r\n        localStorage.removeItem(\"medicine\");\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(`${error.message}`);\r\n        toast.success(\"ADR Form Updated Successfully\");\r\n        history.push(\"/\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <div className=\"row mb-12 col-md-12\" style={{ paddingBottom: \"5px\" }}>\r\n          <div className=\"mb-6 col-md-6\">\r\n            <Breadcrumbs aria-label=\"breadcrumb\">\r\n              <Typography style={{ color: \"#992E62\" }}>ADR</Typography>\r\n              <Typography style={{ color: \"#014d88\" }}>Registration</Typography>\r\n            </Breadcrumbs>\r\n          </div>\r\n          <div className=\"mb-6 col-md-6\">\r\n            <Link\r\n              to={{\r\n                pathname: \"/\",\r\n                state: \"\",\r\n              }}\r\n            >\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-right ms-1\"\r\n                style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                startIcon={<TiArrowBack />}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\" }}>Back </span>\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <Form>\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                <h5\r\n                  className=\"card-title\"\r\n                  style={{ color: \"#fff\", fontWeight: \"bolder\" }}\r\n                >\r\n                  Basic Information\r\n                </h5>\r\n              </div>\r\n              {/* basic info */}\r\n              <div className=\"card-body\">\r\n                <div className=\"basic-form\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"name\">Name </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"name\"\r\n                          id=\"name\"\r\n                          value={`${firstName} ${surname}`}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                          readOnly\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"dob\">DOB </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"dob\"\r\n                          id=\"dob\"\r\n                          value={dob}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                          readOnly\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"age\">Age </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"age\"\r\n                          id=\"age\"\r\n                          value={calculate_age(dob)}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                          readOnly\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"sex\">Sex </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"sex\"\r\n                          id=\"sex\"\r\n                          value={sex}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                          readOnly\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"hospitalNo\">Hospital Number</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"hospitalNo\"\r\n                          id=\"hospitalNo\"\r\n                          value={hospitalNumber}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                          readOnly\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"weight\">\r\n                          Weight <span style={{ color: \"red\" }}>*</span>\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"number\"\r\n                          name=\"weight\"\r\n                          value={adr.weight}\r\n                          id=\"weight\"\r\n                          onChange={handleBioInputChange}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* adverse event */}\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                <h5\r\n                  className=\"card-title\"\r\n                  style={{ color: \"#fff\", fontWeight: \"bolder\" }}\r\n                >\r\n                  Adverse Event\r\n                </h5>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <div className=\"basic-form\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-12\">\r\n                      <FormGroup>\r\n                        <Label for=\"eventDescription\">\r\n                          Describe Event <span style={{ color: \"red\" }}>*</span>\r\n                        </Label>\r\n                        <textarea\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"eventDescription\"\r\n                          id=\"eventDescription\"\r\n                          value={adr.eventDescription}\r\n                          rows={4}\r\n                          cols={60}\r\n                          onChange={handleBioInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014d88\",\r\n                            height: \"80px\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    {/* edit adverse effect */}\r\n                    <h3 className=\"mb-3\">\r\n                      Seriousness of Adverse Event (check all that apply)\r\n                    </h3>\r\n                    <div className=\"form-group mb-3 col-md-2\">\r\n                      <FormGroup>\r\n                        <label>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            name=\"death\"\r\n                            checked={adr.death}\r\n                            onChange={handleBioInputChange}\r\n                          />{\" \"}\r\n                          Death\r\n                        </label>\r\n                      </FormGroup>\r\n                    </div>{\" \"}\r\n                    {adr.death === false ? (\r\n                      \"\"\r\n                    ) : (\r\n                      <div className=\"form-group mb-3 col-md-2\">\r\n                        <FormGroup>\r\n                          <Label for=\"dateOfDeath\">\r\n                            Death Date <span style={{ color: \"red\" }}>*</span>\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateOfDeath\"\r\n                            id=\"dateOfDeath\"\r\n                            value={adr.dateOfDeath}\r\n                            onChange={handleBioInputChange}\r\n                            style={{ border: \"1px solid #014d88\" }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}{\" \"}\r\n                    <div className=\"form-group mb-3 col-md-2\">\r\n                      <FormGroup>\r\n                        <label>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            name=\"lifeThreatening\"\r\n                            checked={adr.lifeThreatening}\r\n                            onChange={handleBioInputChange}\r\n                          />{\" \"}\r\n                          Life threatening\r\n                        </label>\r\n                      </FormGroup>\r\n                    </div>{\" \"}\r\n                    <div className=\"form-group mb-3 col-md-2\">\r\n                      <FormGroup>\r\n                        <label>Hospitalization: </label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"hospitalization\"\r\n                          id=\"hospitalization\"\r\n                          value={adr.hospitalization}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                          onChange={handleBioInputChange}\r\n                        >\r\n                          <option value=\"\">--Please choose an option--</option>\r\n                          <option value=\"Initial\">Initial</option>\r\n                          <option value=\"Prolonged\">Prolonged</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>{\" \"}\r\n                    <div className=\"form-group mb-3 col-md-2\">\r\n                      <FormGroup>\r\n                        <label>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            name=\"disability\"\r\n                            checked={adr.disability}\r\n                            onChange={handleBioInputChange}\r\n                          />{\" \"}\r\n                          Disability or Permanent Damage\r\n                        </label>\r\n                      </FormGroup>\r\n                    </div>{\" \"}\r\n                    <div className=\"form-group mb-3 col-md-2\">\r\n                      <FormGroup>\r\n                        <label>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            name=\"anomaly\"\r\n                            checked={adr.anomaly}\r\n                            onChange={handleBioInputChange}\r\n                          />{\" \"}\r\n                          Congenital Anomaly/Birth Defects\r\n                        </label>\r\n                      </FormGroup>\r\n                    </div>{\" \"}\r\n                    <div className=\"form-group mb-3 col-md-2\">\r\n                      <FormGroup>\r\n                        <label>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            name=\"intervention\"\r\n                            checked={adr.intervention}\r\n                            onChange={handleBioInputChange}\r\n                          />{\" \"}\r\n                          Require Intervention to Permanent Impairment or\r\n                          Disability (Devices)\r\n                        </label>\r\n                      </FormGroup>\r\n                    </div>{\" \"}\r\n                    <div className=\"form-group mb-3 col-md-2\">\r\n                      <FormGroup>\r\n                        <label>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            name=\"others\"\r\n                            checked={adr.others}\r\n                            onChange={handleBioInputChange}\r\n                          />{\" \"}\r\n                          Others\r\n                        </label>\r\n                      </FormGroup>\r\n                    </div>{\" \"}\r\n                    {adr.eventDescription === \"\" ? (\r\n                      \"\"\r\n                    ) : (\r\n                      <div className=\"form-group  col-md-2\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Outcomes <span style={{ color: \"red\" }}>*</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"outcomes\"\r\n                            id=\"outcomes\"\r\n                            style={{ border: \"1px solid #014d88\" }}\r\n                            value={adr.outcomes}\r\n                            onChange={handleBioInputChange}\r\n                          >\r\n                            <option value=\"\">\r\n                              --Please choose an option--\r\n                            </option>\r\n                            {outcomes?.map((outcome, index) => (\r\n                              <option key={outcome.code} value={outcome.code}>\r\n                                {outcome.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}{\" \"}\r\n                    {adr.outcomes === \"\" ? (\r\n                      \"\"\r\n                    ) : (\r\n                      <div className=\"form-group mb-3 col-md-2\">\r\n                        <FormGroup>\r\n                          <Label for=\"onsetDate\">\r\n                            Onset Date of Event{\" \"}\r\n                            <span style={{ color: \"red\" }}>*</span>\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"onsetDate\"\r\n                            id=\"onsetDate\"\r\n                            value={adr.onsetDate}\r\n                            onChange={handleBioInputChange}\r\n                            style={{ border: \"1px solid #014d88\" }}\r\n                            min={dob}\r\n                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {adr.onsetDate !== \"\" && (\r\n                      <div className=\"form-group mb-3 col-md-2\">\r\n                        <FormGroup>\r\n                          <Label for=\"stoppedDate\">\r\n                            Stop Date of Event{\" \"}\r\n                            <span style={{ color: \"red\" }}>*</span>\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"stoppedDate\"\r\n                            id=\"stoppedDate\"\r\n                            value={adr.stoppedDate}\r\n                            onChange={handleBioInputChange}\r\n                            style={{ border: \"1px solid #014d88\" }}\r\n                            min={adr.onsetDate}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {/* <row> */}{\" \"}\r\n                    {adr.others === false ? (\r\n                      \" \"\r\n                    ) : (\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                          <Label for=\"otherDescription\">\r\n                            Others Description{\" \"}\r\n                            <span style={{ color: \"red\" }}>*</span>\r\n                          </Label>\r\n                          <textarea\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"otherDescription\"\r\n                            id=\"otherDescription\"\r\n                            value={adr.otherDescription}\r\n                            onChange={handleBioInputChange}\r\n                            style={{\r\n                              border: \"1px solid #014d88\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}{\" \"}\r\n                    {adr.outcomes ===\r\n                    \"ADVERSE_EVENT_OUTCOME_OTHERS_(SPECIFY)\" ? (\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                          <Label for=\"outcomesOtherDescription\">\r\n                            Outcomes Others Description{\" \"}\r\n                            <span style={{ color: \"red\" }}>*</span>\r\n                          </Label>\r\n                          <textarea\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"outcomesOtherDescription\"\r\n                            id=\"outcomesOtherDescription\"\r\n                            value={adr.outcomesOtherDescription}\r\n                            onChange={handleBioInputChange}\r\n                            style={{\r\n                              border: \"1px solid #014d88\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* suspected drug */}\r\n              {/* <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                <h5\r\n                  className=\"card-title\"\r\n                  style={{ color: \"#fff\", fontWeight: \"bolder\" }}\r\n                >\r\n                  Suspected Drug\r\n                </h5>\r\n              </div> */}\r\n\r\n              {/* <div className=\"card-body\">\r\n                <div className=\"basic-form\">\r\n                  <div className=\"row\">\r\n                    <h3>Product Details</h3>\r\n                    <Drug adverseEffect={adr?.onsetDate} />\r\n                  </div>\r\n                </div>\r\n              </div> */}\r\n\r\n              {/* Concomitant Medicines */}\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                <h5\r\n                  className=\"card-title\"\r\n                  style={{ color: \"#fff\", fontWeight: \"bolder\" }}\r\n                >\r\n                  Concomitant Medicines\r\n                </h5>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <div className=\"basic-form\">\r\n                  <div className=\"row\">\r\n                    {/* <h3>All medicines taken within the last 3 months</h3> */}\r\n\r\n                    {/* <DrugMedicine /> */}\r\n\r\n                    <h3>Other Relevant History</h3>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Preexisting Medical Conditions{\" \"}\r\n                          {/* <span style={{ color: \"red\" }}>*</span> */}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"preexistingMedicalConditions\"\r\n                          id=\"preexistingMedicalConditions\"\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                          value={adr.preexistingMedicalConditions}\r\n                          onChange={handleBioInputChange}\r\n                        >\r\n                          <option value=\"\">--Please choose an option--</option>\r\n                          {relevant.map((outcome, index) => (\r\n                            <option key={outcome.code} value={outcome.code}>\r\n                              {outcome.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {adr.preexistingMedicalConditions !==\r\n                    \"ADR_PREEXISTING_MEDICAL_CONDITIONS_OTHERS_(SPECIFY)\" ? (\r\n                      \"\"\r\n                    ) : (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"preexistingMedicalOthers\">\r\n                            Preexisting Medical Other Description{\" \"}\r\n                            <span style={{ color: \"red\" }}>*</span>\r\n                          </Label>\r\n                          <textarea\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"preexistingMedicalOthers\"\r\n                            id=\"preexistingMedicalOthers\"\r\n                            value={adr.preexistingMedicalOthers}\r\n                            onChange={handleBioInputChange}\r\n                            style={{\r\n                              border: \"1px solid #014d88\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* Reporter */}\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                <h5\r\n                  className=\"card-title\"\r\n                  style={{ color: \"#fff\", fontWeight: \"bolder\" }}\r\n                >\r\n                  Reporter Section\r\n                </h5>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <div className=\"basic-form\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          First name <span style={{ color: \"red\" }}>*</span>\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"firstName\"\r\n                          id=\"firstName\"\r\n                          value={adr.firstName}\r\n                          onChange={handleBioInputChange}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Last Name <span style={{ color: \"red\" }}>*</span>\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"lastName\"\r\n                          id=\"lastName\"\r\n                          value={adr.lastName}\r\n                          onChange={handleBioInputChange}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Address <span style={{ color: \"red\" }}>*</span>\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"address\"\r\n                          id=\"address\"\r\n                          value={adr.address}\r\n                          onChange={handleBioInputChange}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"country\">\r\n                          Country <span style={{ color: \"red\" }}>*</span>\r\n                        </Label>\r\n\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"country\"\r\n                          id=\"country\"\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                          value={adr.country}\r\n                          onChange={handleBioInputChange}\r\n                        >\r\n                          {/* <option value=\"\">--Please choose an option--</option> */}\r\n                          {countries.map((value, index) => (\r\n                            <option key={index} value={value.name}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"state\">\r\n                          State <span style={{ color: \"red\" }}>*</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"state\"\r\n                          id=\"state\"\r\n                          value={adr.state}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          onChange={handleBioInputChange}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {states.map((value, index) => (\r\n                            <option key={index} value={value.name}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">\r\n                          City <span style={{ color: \"red\" }}>*</span>\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"city\"\r\n                          id=\"city\"\r\n                          value={adr.city}\r\n                          onChange={handleBioInputChange}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Phone Number <span style={{ color: \"red\" }}>*</span>\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"number\"\r\n                          name=\"phoneNumber\"\r\n                          id=\"phoneNumber\"\r\n                          value={adr.phoneNumber}\r\n                          onChange={handleBioInputChange}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Email <span style={{ color: \"red\" }}>*</span>\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"email\"\r\n                          name=\"email\"\r\n                          id=\"email\"\r\n                          value={adr.email}\r\n                          onChange={handleBioInputChange}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Health Professional{\" \"}\r\n                          <span style={{ color: \"red\" }}>*</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"healthProfessional\"\r\n                          id=\"healthProfessional\"\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                          value={adr.healthProfessional}\r\n                          onChange={handleBioInputChange}\r\n                        >\r\n                          <option value=\"\">--Please choose an option--</option>\r\n                          <option value=\"Yes\">Yes</option>\r\n                          <option value=\"No\">No</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Occupation <span style={{ color: \"red\" }}>*</span>\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"occupation\"\r\n                          id=\"occupation\"\r\n                          value={adr.occupation}\r\n                          onChange={handleBioInputChange}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Report Date <span style={{ color: \"red\" }}>*</span>\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          name=\"reportDate\"\r\n                          id=\"reportDate\"\r\n                          value={adr.reportDate}\r\n                          onChange={handleBioInputChange}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                          max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <row>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className=\" float-right ms-1\"\r\n                        style={{\r\n                          backgroundColor: \"#014d88\",\r\n                          fontWeight: \"bolder\",\r\n                        }}\r\n                        startIcon={<SaveIcon />}\r\n                        onClick={submitForm}\r\n                      >\r\n                        {!saving ? (\r\n                          <span style={{ textTransform: \"capitalize\" }}>\r\n                            Update\r\n                          </span>\r\n                        ) : (\r\n                          <span style={{ textTransform: \"capitalize\" }}>\r\n                            Updating...\r\n                          </span>\r\n                        )}\r\n                      </Button>\r\n                    </row>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default EditForm;\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\ADR_Module\\src\\main\\webapp\\jsx\\components\\ADR\\Drug.js",["93","94","95"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport { Form, FormGroup, Label, Spinner } from \"reactstrap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport * as moment from \"moment\";\r\n\r\nconst Drug = ({ adverseEffect }) => {\r\n  const [drugs, setDrugs] = useState([]);\r\n  const [storedValues, setStoredValues] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const styles = {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  };\r\n\r\n  const [severeDrugs, setSevereDrugs] = useState({\r\n    drugType: \"\",\r\n    brandName: \"\",\r\n    genericName: \"\",\r\n    manufacturerName: \"\",\r\n    manufacturerAddress: \"\",\r\n    batchNo: \"\",\r\n    nafdacNo: \"\",\r\n    expiryDate: \"\",\r\n    dosage: \"\",\r\n    frequency: \"\",\r\n    administrationRoute: \"\",\r\n    dateMedicationStarted: \"\",\r\n    dateMedicationStopped: \"\",\r\n    reactionReappeared: \"\",\r\n    reactionStopped: \"\",\r\n  });\r\n\r\n  const adrDrugs = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/ADR_DRUG_TYPE`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setDrugs(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    adrDrugs();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const values = JSON.parse(localStorage.getItem(\"severeDrugs\")) || [];\r\n    setStoredValues(values);\r\n  }, []);\r\n\r\n  const handleSevereInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setSevereDrugs({\r\n      ...severeDrugs,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const validateInputs = () => {\r\n    const temp = { ...errors };\r\n    temp.drugType = severeDrugs.drugType ? \"\" : \"Drug Type is required.\";\r\n    temp.brandName = severeDrugs.brandName ? \"\" : \"Brand Name is required.\";\r\n    temp.genericName = severeDrugs.genericName\r\n      ? \"\"\r\n      : \"Generic Name is required.\";\r\n    temp.manufacturerName = severeDrugs.manufacturerName\r\n      ? \"\"\r\n      : \"Manufacturer Name is required.\";\r\n    temp.manufacturerAddress = severeDrugs.manufacturerAddress\r\n      ? \"\"\r\n      : \"Manufacturer Address is required.\";\r\n    temp.batchNo = severeDrugs.batchNo ? \"\" : \"Batch No is required.\";\r\n    temp.nafdacNo = severeDrugs.nafdacNo ? \"\" : \"Nafdac No is required.\";\r\n    temp.expiryDate = severeDrugs.expiryDate ? \"\" : \"Expiry Date is required.\";\r\n    temp.dosage = severeDrugs.dosage ? \"\" : \"Dosage is required.\";\r\n    temp.frequency = severeDrugs.frequency ? \"\" : \"Frequency is required.\";\r\n    temp.administrationRoute = severeDrugs.administrationRoute\r\n      ? \"\"\r\n      : \"Administration Route is required.\";\r\n    temp.dateMedicationStarted = severeDrugs.dateMedicationStarted\r\n      ? \"\"\r\n      : \"Date Medication Started is required.\";\r\n    temp.dateMedicationStopped = severeDrugs.dateMedicationStopped\r\n      ? \"\"\r\n      : \"Date Medication Stopped is required.\";\r\n    temp.reactionReappeared = severeDrugs.reactionReappeared\r\n      ? \"\"\r\n      : \"Reaction Reappeared is required.\";\r\n    temp.reactionStopped = severeDrugs.reactionStopped\r\n      ? \"\"\r\n      : \"Reaction Stopped is required.\";\r\n\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n\r\n  const addForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (validateInputs()) {\r\n      const newValues = [...storedValues, severeDrugs];\r\n      setStoredValues(newValues);\r\n      localStorage.setItem(\"severeDrugs\", JSON.stringify(newValues));\r\n\r\n      setSevereDrugs({\r\n        drugType: \"\",\r\n        brandName: \"\",\r\n        genericName: \"\",\r\n        manufacturerName: \"\",\r\n        manufacturerAddress: \"\",\r\n        batchNo: \"\",\r\n        nafdacNo: \"\",\r\n        expiryDate: \"\",\r\n        dosage: \"\",\r\n        frequency: \"\",\r\n        administrationRoute: \"\",\r\n        dateMedicationStarted: \"\",\r\n        dateMedicationStopped: \"\",\r\n        reactionReappeared: \"\",\r\n        reactionStopped: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const deteleItem = (index) => {\r\n    const newValues = storedValues.filter((_, i) => i !== index);\r\n    setStoredValues(newValues);\r\n    localStorage.setItem(\"severeDrugs\", JSON.stringify(newValues));\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"form-group  col-md-3\">\r\n        <FormGroup>\r\n          <Label>\r\n            Drug Type <span style={{ color: \"red\" }}>*</span>\r\n          </Label>\r\n          <select\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"drugType\"\r\n            id=\"drugType\"\r\n            style={{ border: \"1px solid #014d88\" }}\r\n            value={severeDrugs.drugType}\r\n            onChange={handleSevereInputChange}\r\n          >\r\n            <option value=\"\">--Please choose an option--</option>\r\n            {drugs.map((drug, index) => (\r\n              <option key={drug.id} value={drug.id}>\r\n                {drug.display}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {errors.drugType !== \"\" ? (\r\n            <span style={styles}>{errors.drugType}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </FormGroup>\r\n      </div>\r\n      <div className=\"form-group  col-md-3\">\r\n        <FormGroup>\r\n          <Label>\r\n            Brand name <span style={{ color: \"red\" }}>*</span>\r\n          </Label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"brandName\"\r\n            id=\"brandName\"\r\n            value={severeDrugs.brandName}\r\n            onChange={handleSevereInputChange}\r\n            style={{ border: \"1px solid #014d88\" }}\r\n          />\r\n          {errors.brandName !== \"\" ? (\r\n            <span style={styles}>{errors.brandName}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </FormGroup>\r\n      </div>\r\n      <div className=\"form-group  col-md-3\">\r\n        <FormGroup>\r\n          <Label>\r\n            Generic name <span style={{ color: \"red\" }}>*</span>\r\n          </Label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"genericName\"\r\n            id=\"genericName\"\r\n            value={severeDrugs.genericName}\r\n            onChange={handleSevereInputChange}\r\n            style={{ border: \"1px solid #014d88\" }}\r\n          />\r\n          {errors.genericName !== \"\" ? (\r\n            <span style={styles}>{errors.genericName}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </FormGroup>\r\n      </div>\r\n      <div className=\"form-group  col-md-3\">\r\n        <FormGroup>\r\n          <Label>\r\n            Name of manufacturer <span style={{ color: \"red\" }}>*</span>\r\n          </Label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"manufacturerName\"\r\n            id=\"manufacturerName\"\r\n            value={severeDrugs.manufacturerName}\r\n            onChange={handleSevereInputChange}\r\n            style={{ border: \"1px solid #014d88\" }}\r\n          />\r\n          {errors.manufacturerName !== \"\" ? (\r\n            <span style={styles}>{errors.manufacturerName}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </FormGroup>\r\n      </div>\r\n      <div className=\"form-group  col-md-3\">\r\n        <FormGroup>\r\n          <Label>\r\n            Address of manufacturer <span style={{ color: \"red\" }}>*</span>\r\n          </Label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"manufacturerAddress\"\r\n            id=\"manufacturerAddress\"\r\n            value={severeDrugs.manufacturerAddress}\r\n            onChange={handleSevereInputChange}\r\n            style={{ border: \"1px solid #014d88\" }}\r\n          />\r\n          {errors.manufacturerAddress !== \"\" ? (\r\n            <span style={styles}>{errors.manufacturerAddress}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </FormGroup>\r\n      </div>\r\n      <div className=\"form-group  col-md-3\">\r\n        <FormGroup>\r\n          <Label>\r\n            Batch No <span style={{ color: \"red\" }}>*</span>\r\n          </Label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"batchNo\"\r\n            id=\"batchNo\"\r\n            value={severeDrugs.batchNo}\r\n            onChange={handleSevereInputChange}\r\n            style={{ border: \"1px solid #014d88\" }}\r\n          />\r\n          {errors.batchNo !== \"\" ? (\r\n            <span style={styles}>{errors.batchNo}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </FormGroup>\r\n      </div>\r\n      <div className=\"form-group  col-md-3\">\r\n        <FormGroup>\r\n          <Label>\r\n            NAFDAC No <span style={{ color: \"red\" }}>*</span>\r\n          </Label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"nafdacNo\"\r\n            id=\"nafdacNo\"\r\n            value={severeDrugs.nafdacNo}\r\n            onChange={handleSevereInputChange}\r\n            style={{ border: \"1px solid #014d88\" }}\r\n          />\r\n          {errors.nafdacNo !== \"\" ? (\r\n            <span style={styles}>{errors.nafdacNo}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </FormGroup>\r\n      </div>\r\n      <div className=\"form-group mb-3 col-md-3\">\r\n        <FormGroup>\r\n          <Label for=\"onset_date\">\r\n            Expiry Date <span style={{ color: \"red\" }}>*</span>\r\n          </Label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"date\"\r\n            name=\"expiryDate\"\r\n            id=\"expiryDate\"\r\n            value={severeDrugs.expiryDate}\r\n            onChange={handleSevereInputChange}\r\n            style={{ border: \"1px solid #014d88\" }}\r\n          />\r\n          {errors.expiryDate !== \"\" ? (\r\n            <span style={styles}>{errors.expiryDate}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </FormGroup>\r\n      </div>\r\n      <h3>Indication for use (Diagnosis)</h3>\r\n      <div className=\"form-group  col-md-4\">\r\n        <FormGroup>\r\n          <Label>\r\n            Dosage <span style={{ color: \"red\" }}>*</span>\r\n          </Label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"number\"\r\n            name=\"dosage\"\r\n            id=\"ç\"\r\n            value={severeDrugs.dosage}\r\n            onChange={handleSevereInputChange}\r\n            style={{ border: \"1px solid #014d88\" }}\r\n          />\r\n          {errors.dosage !== \"\" ? (\r\n            <span style={styles}>{errors.dosage}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </FormGroup>\r\n      </div>\r\n      <div className=\"form-group  col-md-4\">\r\n        <FormGroup>\r\n          <Label>\r\n            Frequency <span style={{ color: \"red\" }}>*</span>\r\n          </Label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"number\"\r\n            name=\"frequency\"\r\n            id=\"frequency\"\r\n            value={severeDrugs.frequency}\r\n            onChange={handleSevereInputChange}\r\n            style={{ border: \"1px solid #014d88\" }}\r\n          />\r\n          {errors.frequency !== \"\" ? (\r\n            <span style={styles}>{errors.frequency}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </FormGroup>\r\n      </div>\r\n      <div className=\"form-group  col-md-4\">\r\n        <FormGroup>\r\n          <Label>\r\n            Route Administration <span style={{ color: \"red\" }}>*</span>\r\n          </Label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"administrationRoute\"\r\n            id=\"administrationRoute\"\r\n            value={severeDrugs.administrationRoute}\r\n            onChange={handleSevereInputChange}\r\n            style={{ border: \"1px solid #014d88\" }}\r\n          />\r\n          {errors.administrationRoute !== \"\" ? (\r\n            <span style={styles}>{errors.administrationRoute}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </FormGroup>\r\n      </div>\r\n      <div className=\"form-group mb-3 col-md-4\">\r\n        <FormGroup>\r\n          <Label for=\"\">\r\n            Date medication started <span style={{ color: \"red\" }}>*</span>\r\n          </Label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"date\"\r\n            name=\"dateMedicationStarted\"\r\n            id=\"dateMedicationStarted\"\r\n            value={severeDrugs.dateMedicationStarted}\r\n            onChange={handleSevereInputChange}\r\n            style={{ border: \"1px solid #014d88\" }}\r\n            min={adverseEffect.onsetDate}\r\n            max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n          />\r\n          {errors.dateMedicationStarted !== \"\" ? (\r\n            <span style={styles}>{errors.dateMedicationStarted}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </FormGroup>\r\n      </div>\r\n      <div className=\"form-group mb-3 col-md-4\">\r\n        <FormGroup>\r\n          <Label for=\"dateMedicationStopped\">\r\n            Date medication stopped <span style={{ color: \"red\" }}>*</span>\r\n          </Label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"date\"\r\n            name=\"dateMedicationStopped\"\r\n            id=\"dateMedicationStopped\"\r\n            value={severeDrugs.dateMedicationStopped}\r\n            onChange={handleSevereInputChange}\r\n            style={{ border: \"1px solid #014d88\" }}\r\n            min={severeDrugs.dateMedicationStarted}\r\n            max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n          />\r\n          {errors.dateMedicationStopped !== \"\" ? (\r\n            <span style={styles}>{errors.dateMedicationStopped}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </FormGroup>\r\n      </div>\r\n      <div className=\"form-group  col-md-4\">\r\n        <FormGroup>\r\n          <Label>\r\n            Reaction Stopped or Reduced after drug withdrawal{\" \"}\r\n            <span style={{ color: \"red\" }}>*</span>\r\n          </Label>\r\n          <select\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"reactionReappeared\"\r\n            id=\"reactionReappeared\"\r\n            style={{ border: \"1px solid #014d88\" }}\r\n            value={severeDrugs.reactionReappeared}\r\n            onChange={handleSevereInputChange}\r\n          >\r\n            <option value=\"\">--Please choose an option--</option>\r\n            <option value=\"Yes\">Yes</option>\r\n            <option value=\"No\">No</option>\r\n            <option value=\"Doesn't Apply\">Doesn't Apply</option>\r\n          </select>\r\n          {errors.reactionReappeared !== \"\" ? (\r\n            <span style={styles}>{errors.reactionReappeared}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </FormGroup>\r\n      </div>\r\n      <div className=\"form-group  col-md-4\">\r\n        <FormGroup>\r\n          <Label>\r\n            Reaction reappeared after drug reintroduction{\" \"}\r\n            <span style={{ color: \"red\" }}>*</span>\r\n          </Label>\r\n          <select\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"reactionStopped\"\r\n            id=\"reactionStopped\"\r\n            style={{ border: \"1px solid #014d88\" }}\r\n            value={severeDrugs.reactionStopped}\r\n            onChange={handleSevereInputChange}\r\n          >\r\n            <option value=\"\">--Please choose an option--</option>\r\n            <option value=\"Yes\">Yes</option>\r\n            <option value=\"No\">No</option>\r\n            <option value=\"Doesn't Apply\">Doesn't Apply</option>\r\n          </select>\r\n          {errors.reactionStopped !== \"\" ? (\r\n            <span style={styles}>{errors.reactionStopped}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </FormGroup>\r\n      </div>\r\n      <row>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\" float-right ms-1\"\r\n          style={{\r\n            backgroundColor: \"rgb(153, 46, 98)\",\r\n            fontWeight: \"bolder\",\r\n          }}\r\n          startIcon={<AddIcon />}\r\n          onClick={addForm}\r\n        >\r\n          Add\r\n        </Button>\r\n      </row>\r\n      {storedValues.length > 0 && (\r\n        <>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <br />\r\n            <table className=\"table table-bordered table-responsive\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Drug Type</th>\r\n                  <th scope=\"col\">Brand</th>\r\n                  <th scope=\"col\">Generic</th>\r\n                  <th scope=\"col\">Manufacturer</th>\r\n                  <th scope=\"col\">Manufacturer Address</th>\r\n                  <th scope=\"col\">Batch</th>\r\n                  <th scope=\"col\">NAFDAC</th>\r\n                  <th scope=\"col\">Expiry Date</th>\r\n                  <th scope=\"col\">Dosage</th>\r\n                  <th scope=\"col\">Frequency</th>\r\n                  <th scope=\"col\">Route</th>\r\n                  <th scope=\"col\">Date Started</th>\r\n                  <th scope=\"col\">Date Stopped</th>\r\n                  <th scope=\"col\">Reaction Reappeared</th>\r\n                  <th scope=\"col\">Reaction Stopped</th>\r\n                  <th scope=\"col\"></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {storedValues.map((x, i) => (\r\n                  <tr key={i}>\r\n                    <td>{x.drugType}</td>\r\n                    <td>{x.brandName}</td>\r\n                    <td>{x.genericName}</td>\r\n                    <td>{x.manufacturerName}</td>\r\n                    <td>{x.manufacturerAddress}</td>\r\n                    <td>{x.batchNo}</td>\r\n                    <td>{x.nafdacNo}</td>\r\n                    <td>{x.expiryDate}</td>\r\n                    <td>{x.dosage}</td>\r\n                    <td>{x.frequency}</td>\r\n                    <td>{x.administrationRoute}</td>\r\n                    <td>{x.dateMedicationStarted}</td>\r\n                    <td>{x.dateMedicationStopped}</td>\r\n                    <td>{x.reactionReappeared}</td>\r\n                    <td>{x.reactionStopped}</td>\r\n                    <td>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className=\" float-right ms-1\"\r\n                        style={{\r\n                          backgroundColor: \"rgb(153, 46, 98)\",\r\n                          fontWeight: \"bolder\",\r\n                        }}\r\n                        startIcon={<DeleteIcon />}\r\n                        onClick={() => deteleItem(i)}\r\n                      ></Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Drug;\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\ADR_Module\\src\\main\\webapp\\jsx\\components\\ADR\\DrugMedicine.js",["96","97","98","99","100","101"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport { Form, FormGroup, Label, Spinner } from \"reactstrap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport * as moment from \"moment\";\r\n\r\nconst DrugMedicine = () => {\r\n  const [storedValues, setStoredValues] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const styles = {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  };\r\n\r\n  const [concomitantMedicines, setConcomitantMedicines] = useState({\r\n    concomitantBrandName: \"\",\r\n    concomitantDosage: \"\",\r\n    concomitantRoute: \"\",\r\n    dateConcomitantStarted: \"\",\r\n    dateConcomitantStopped: \"\",\r\n    concomitantReasonUse: \"\",\r\n    relevantTest: \"\",\r\n    relevantTestDate: \"\",\r\n    relevantResult: \"\",\r\n    relevantResultDate: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const values = JSON.parse(localStorage.getItem(\"medicine\")) || [];\r\n    setStoredValues(values);\r\n  }, []);\r\n\r\n  const handleMedicineInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setConcomitantMedicines({\r\n      ...concomitantMedicines,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const validateInputs = () => {\r\n    const temp = { ...errors };\r\n    temp.concomitantBrandName = concomitantMedicines.concomitantBrandName\r\n      ? \"\"\r\n      : \"Concomitant Brand Name is required.\";\r\n    temp.concomitantDosage = concomitantMedicines.concomitantDosage\r\n      ? \"\"\r\n      : \"Concomitant Dosage is required.\";\r\n    temp.concomitantRoute = concomitantMedicines.concomitantRoute\r\n      ? \"\"\r\n      : \"Concomitant route is required.\";\r\n    temp.dateConcomitantStarted = concomitantMedicines.dateConcomitantStarted\r\n      ? \"\"\r\n      : \"Date Concomitant Started is required.\";\r\n    temp.dateConcomitantStopped = concomitantMedicines.dateConcomitantStopped\r\n      ? \"\"\r\n      : \"Date Concomitant Stopped is required.\";\r\n    temp.concomitantReasonUse = concomitantMedicines.concomitantReasonUse\r\n      ? \"\"\r\n      : \"Concomitant Reason Use is required.\";\r\n    temp.relevantTest = concomitantMedicines.relevantTest\r\n      ? \"\"\r\n      : \"Relevant Test is required.\";\r\n    temp.relevantTestDate = concomitantMedicines.relevantTestDate\r\n      ? \"\"\r\n      : \"Relevant Test Date is required.\";\r\n    temp.relevantResult = concomitantMedicines.relevantResult\r\n      ? \"\"\r\n      : \"Relevant Result is required.\";\r\n    // temp.relevantResultDate = concomitantMedicines.relevantResultDate\r\n    //   ? \"\"\r\n    //   : \"Relevant Result Date is required.\";\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n\r\n  const addForm = (e) => {\r\n    e.preventDefault();\r\n    if (validateInputs()) {\r\n      const newValues = [...storedValues, concomitantMedicines];\r\n      setStoredValues(newValues);\r\n      localStorage.setItem(\"medicine\", JSON.stringify(newValues));\r\n\r\n      setConcomitantMedicines({\r\n        concomitantBrandName: \"\",\r\n        concomitantDosage: \"\",\r\n        concomitantRoute: \"\",\r\n        dateConcomitantStarted: \"\",\r\n        dateConcomitantStopped: \"\",\r\n        concomitantReasonUse: \"\",\r\n        relevantTest: \"\",\r\n        relevantTestDate: \"\",\r\n        relevantResult: \"\",\r\n        relevantResultDate: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const deteleItem = (index) => {\r\n    const newValues = storedValues.filter((_, i) => i !== index);\r\n    setStoredValues(newValues);\r\n    localStorage.setItem(\"medicine\", JSON.stringify(newValues));\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"form-group  col-md-4\">\r\n        <FormGroup>\r\n          <Label>\r\n            Brand or Generic name{\" \"}\r\n            {/* <span style={{ color: \"red\" }}>*</span> */}\r\n          </Label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"concomitantBrandName\"\r\n            id=\"concomitantBrandName\"\r\n            value={concomitantMedicines.concomitantBrandName}\r\n            onChange={handleMedicineInputChange}\r\n            style={{ border: \"1px solid #014d88\" }}\r\n          />\r\n          {errors.concomitantBrandName !== \"\" ? (\r\n            <span style={styles}>{errors.concomitantBrandName}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </FormGroup>\r\n      </div>\r\n      <div className=\"form-group  col-md-4\">\r\n        <FormGroup>\r\n          <Label>\r\n            Dosage\r\n            {/* <span style={{ color: \"red\" }}>*</span> */}\r\n          </Label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"number\"\r\n            name=\"concomitantDosage\"\r\n            id=\"concomitantDosage\"\r\n            value={concomitantMedicines.concomitantDosage}\r\n            onChange={handleMedicineInputChange}\r\n            style={{ border: \"1px solid #014d88\" }}\r\n          />\r\n          {errors.concomitantDosage !== \"\" ? (\r\n            <span style={styles}>{errors.concomitantDosage}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </FormGroup>\r\n      </div>\r\n      <div className=\"form-group  col-md-4\">\r\n        <FormGroup>\r\n          <Label>\r\n            Route\r\n            {/* <span style={{ color: \"red\" }}>*</span> */}\r\n          </Label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"concomitantRoute\"\r\n            id=\"concomitantRoute\"\r\n            value={concomitantMedicines.concomitantRoute}\r\n            onChange={handleMedicineInputChange}\r\n            style={{ border: \"1px solid #014d88\" }}\r\n          />\r\n          {errors.concomitantRoute !== \"\" ? (\r\n            <span style={styles}>{errors.concomitantRoute}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </FormGroup>\r\n      </div>\r\n      <div className=\"form-group mb-3 col-md-3\">\r\n        <FormGroup>\r\n          <Label for=\"onset_date\">\r\n            Date started\r\n            {/* <span style={{ color: \"red\" }}>*</span> */}\r\n          </Label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"date\"\r\n            name=\"dateConcomitantStarted\"\r\n            id=\"dateConcomitantStarted\"\r\n            value={concomitantMedicines.dateConcomitantStarted}\r\n            onChange={handleMedicineInputChange}\r\n            style={{ border: \"1px solid #014d88\" }}\r\n            max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n          />\r\n          {errors.dateConcomitantStarted !== \"\" ? (\r\n            <span style={styles}>{errors.dateConcomitantStarted}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </FormGroup>\r\n      </div>\r\n      <div className=\"form-group mb-3 col-md-3\">\r\n        <FormGroup>\r\n          <Label for=\"dateConcomitantStopped\">\r\n            Date stopped\r\n            {/* <span style={{ color: \"red\" }}>*</span> */}\r\n          </Label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"date\"\r\n            name=\"dateConcomitantStopped\"\r\n            id=\"dateConcomitantStopped\"\r\n            value={concomitantMedicines.dateConcomitantStopped}\r\n            onChange={handleMedicineInputChange}\r\n            style={{ border: \"1px solid #014d88\" }}\r\n            min={concomitantMedicines.dateConcomitantStarted}\r\n            max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n          />\r\n          {errors.dateConcomitantStopped !== \"\" ? (\r\n            <span style={styles}>{errors.dateConcomitantStopped}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </FormGroup>\r\n      </div>\r\n      <div className=\"form-group  col-md-6\">\r\n        <FormGroup>\r\n          <Label>\r\n            Reason for Use\r\n            {/* <span style={{ color: \"red\" }}>*</span> */}\r\n          </Label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"concomitantReasonUse\"\r\n            id=\"concomitantReasonUse\"\r\n            value={concomitantMedicines.concomitantReasonUse}\r\n            onChange={handleMedicineInputChange}\r\n            style={{ border: \"1px solid #014d88\" }}\r\n          />\r\n          {errors.concomitantReasonUse !== \"\" ? (\r\n            <span style={styles}>{errors.concomitantReasonUse}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </FormGroup>\r\n      </div>\r\n      <h3>Relevant Tests/Laboratory Data with Dates</h3>\r\n      <div className=\"form-group  col-md-3\">\r\n        <FormGroup>\r\n          <Label>\r\n            Relevant Test\r\n            {/* <span style={{ color: \"red\" }}>*</span> */}\r\n          </Label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"relevantTest\"\r\n            id=\"relevantTest\"\r\n            value={concomitantMedicines.relevantTest}\r\n            onChange={handleMedicineInputChange}\r\n            style={{ border: \"1px solid #014d88\" }}\r\n          />\r\n          {errors.relevantTest !== \"\" ? (\r\n            <span style={styles}>{errors.relevantTest}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </FormGroup>\r\n      </div>\r\n      <div className=\"form-group  col-md-3\">\r\n        <FormGroup>\r\n          <Label>\r\n            Test Date\r\n            {/* <span style={{ color: \"red\" }}>*</span> */}\r\n          </Label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"date\"\r\n            name=\"relevantTestDate\"\r\n            id=\"relevantTestDate\"\r\n            value={concomitantMedicines.relevantTestDate}\r\n            onChange={handleMedicineInputChange}\r\n            style={{ border: \"1px solid #014d88\" }}\r\n            max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n          />\r\n          {errors.relevantTestDate !== \"\" ? (\r\n            <span style={styles}>{errors.relevantTestDate}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </FormGroup>\r\n      </div>\r\n      <div className=\"form-group  col-md-3\">\r\n        <FormGroup>\r\n          <Label>\r\n            Result\r\n            {/* <span style={{ color: \"red\" }}>*</span> */}\r\n          </Label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"number\"\r\n            name=\"relevantResult\"\r\n            id=\"relevantResult\"\r\n            value={concomitantMedicines.relevantResult}\r\n            onChange={handleMedicineInputChange}\r\n            style={{ border: \"1px solid #014d88\" }}\r\n          />\r\n          {errors.relevantResult !== \"\" ? (\r\n            <span style={styles}>{errors.relevantResult}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </FormGroup>\r\n      </div>\r\n      <div className=\"form-group  col-md-3\">\r\n        <FormGroup>\r\n          <Label>\r\n            Result Date\r\n            {/* <span style={{ color: \"red\" }}>*</span> */}\r\n          </Label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"date\"\r\n            name=\"relevantResultDate\"\r\n            id=\"relevantResultDate\"\r\n            value={concomitantMedicines.relevantResultDate}\r\n            onChange={handleMedicineInputChange}\r\n            style={{ border: \"1px solid #014d88\" }}\r\n            min={concomitantMedicines.relevantTestDate}\r\n            max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n          />\r\n          {/* {errors.relevantResultDate !== \"\" ? (\r\n            <span style={styles}>{errors.relevantResultDate}</span>\r\n          ) : (\r\n            \"\"\r\n          )} */}\r\n        </FormGroup>\r\n      </div>\r\n      <row>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\" float-right ms-1\"\r\n          style={{\r\n            backgroundColor: \"rgb(153, 46, 98)\",\r\n            fontWeight: \"bolder\",\r\n          }}\r\n          startIcon={<AddIcon />}\r\n          onClick={addForm}\r\n        >\r\n          Add\r\n        </Button>\r\n      </row>\r\n      {storedValues.length > 0 && (\r\n        <>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <br />\r\n            <table className=\"table table-bordered table-responsive\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Brand or Generic name</th>\r\n                  <th scope=\"col\">Dosage</th>\r\n                  <th scope=\"col\">Route</th>\r\n                  <th scope=\"col\">Date started</th>\r\n                  <th scope=\"col\">Date stopped</th>\r\n                  <th scope=\"col\">Reason for Use</th>\r\n                  <th scope=\"col\">Relevant Test</th>\r\n                  <th scope=\"col\">Relevant Test Date</th>\r\n                  <th scope=\"col\">Relevant Result</th>\r\n                  <th scope=\"col\">Relevant Result Date</th>\r\n\r\n                  <th scope=\"col\"></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {storedValues.map((x, i) => (\r\n                  <tr key={i}>\r\n                    <td>{x.concomitantBrandName}</td>\r\n                    <td>{x.concomitantDosage}</td>\r\n                    <td>{x.concomitantRoute}</td>\r\n                    <td>{x.dateConcomitantStarted}</td>\r\n                    <td>{x.dateConcomitantStopped}</td>\r\n                    <td>{x.concomitantReasonUse}</td>\r\n                    <td>{x.relevantTest}</td>\r\n                    <td>{x.relevantTestDate}</td>\r\n                    <td>{x.relevantResult}</td>\r\n                    <td>{x.relevantResultDate}</td>\r\n                    <td>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className=\" float-right ms-1\"\r\n                        style={{\r\n                          backgroundColor: \"rgb(153, 46, 98)\",\r\n                          fontWeight: \"bolder\",\r\n                        }}\r\n                        startIcon={<DeleteIcon />}\r\n                        onClick={() => deteleItem(i)}\r\n                      ></Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrugMedicine;\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\ADR_Module\\src\\main\\webapp\\jsx\\components\\ADR\\ADRList.js",["102","103"],"import React, { useState, forwardRef, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { token as token, url as baseUrl } from \"../../../api\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport NotesIcon from \"@mui/icons-material/Notes\";\r\n\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst AList = (props) => {\r\n  useEffect(() => {\r\n    localStorage.removeItem(\"severeDrugs\");\r\n    localStorage.removeItem(\"medicine\");\r\n  }, []);\r\n\r\n  const calculateAge = (dob) => {\r\n    const today = new Date();\r\n    const birthDate = new Date(dob);\r\n\r\n    let ageYears = today.getFullYear() - birthDate.getFullYear();\r\n    const monthDifference = today.getMonth() - birthDate.getMonth();\r\n\r\n    if (\r\n      ageYears <= 0 &&\r\n      monthDifference < 0 &&\r\n      today.getDate() < birthDate.getDate()\r\n    ) {\r\n      ageYears--;\r\n    }\r\n\r\n    if (ageYears === 0) {\r\n      return monthDifference === 0\r\n        ? \"Less than a month\"\r\n        : `${monthDifference} month(s)`;\r\n    }\r\n\r\n    return ageYears === 1 ? \"1 year\" : `${ageYears} years`;\r\n  };\r\n\r\n  const handleRemoteData = (query) =>\r\n    new Promise((resolve, reject) => {\r\n      axios\r\n        .get(`${baseUrl}adr/get_all?searchParam=${query.search}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => response)\r\n        .then((result) => {\r\n          if (result?.data === \"\") {\r\n            resolve({\r\n              data: [],\r\n              page: 0,\r\n              totalCount: 0,\r\n            });\r\n          } else {\r\n            resolve({\r\n              data: result?.data.reverse().map((row) => ({\r\n                name: [row.firstName, row.surname].filter(Boolean).join(\", \"),\r\n                id: row.hospitalNumber,\r\n                sex: row.sex,\r\n                dateOfBirth: row.dob,\r\n                age:\r\n                  row.dob === 0 ||\r\n                  row.dob === undefined ||\r\n                  row.dob === null ||\r\n                  row.dob === \"\"\r\n                    ? 0\r\n                    : calculateAge(row.dob),\r\n                actions: (\r\n                  <div>\r\n                    <Link\r\n                      to={{\r\n                        pathname: \"/edit-adr-form\",\r\n                        state: {\r\n                          patientInfo: row,\r\n                        },\r\n                      }}\r\n                    >\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className=\" float-right ms-1\"\r\n                        style={{\r\n                          backgroundColor: \"rgb(153, 46, 98)\",\r\n                          fontWeight: \"bolder\",\r\n                        }}\r\n                        startIcon={<NotesIcon />}\r\n                      >\r\n                        Edit Form\r\n                      </Button>\r\n                    </Link>\r\n                  </div>\r\n                ),\r\n              })),\r\n              page: query.page,\r\n              totalCount: result.data.length,\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          resolve({\r\n            data: [],\r\n            page: 0,\r\n            totalCount: 0,\r\n          });\r\n        });\r\n    });\r\n\r\n  return (\r\n    <>\r\n      <Container fluid>\r\n        <Card className=\"mt-4\">\r\n          <Card.Body>\r\n            <Row>\r\n              <Col>\r\n                <br />\r\n                <MaterialTable\r\n                  icons={tableIcons}\r\n                  title=\"Filled ADR Forms\"\r\n                  columns={[\r\n                    {\r\n                      title: \"Name\",\r\n                      field: \"name\",\r\n                      filtering: false,\r\n                      //hidden: enablePPI,\r\n                    },\r\n                    { title: \"Hosp. Number\", field: \"id\", filtering: false },\r\n                    { title: \"Sex\", field: \"sex\", filtering: false },\r\n                    {\r\n                      title: \"Date Of Birth\",\r\n                      field: \"dateOfBirth\",\r\n                      filtering: false,\r\n                    },\r\n                    { title: \"Age\", field: \"age\", filtering: false },\r\n                    /*{ title: \"Address\", field: \"address\", filtering: false },*/\r\n                    /*{ title: \"Status\", field: \"status\", filtering: false },*/\r\n                    { title: \"\", field: \"actions\", filtering: false },\r\n                  ]}\r\n                  data={handleRemoteData}\r\n                  options={{\r\n                    headerStyle: {\r\n                      backgroundColor: \"#014d88\",\r\n                      color: \"#fff\",\r\n                    },\r\n                    searchFieldStyle: {\r\n                      width: \"200%\",\r\n                      margingLeft: \"250px\",\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: \"left\",\r\n                    pageSizeOptions: [10, 20, 100],\r\n                    pageSize: 10,\r\n                    debounceInterval: 400,\r\n                  }}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AList;\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\ADR_Module\\src\\main\\webapp\\jsx\\components\\ADR\\ClientList.js",["104","105","106","107","108","109"],"import React, { useState, forwardRef, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport EditNoteIcon from \"@mui/icons-material/EditNote\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { token as token, url as baseUrl } from \"../../../api\";\r\n\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst ClientList = (props) => {\r\n  const [upload, setUpload] = useState([]);\r\n  const [permissions, setPermissions] = useState(props.permissions);\r\n\r\n  useEffect(() => {\r\n    localStorage.removeItem(\"severeDrugs\");\r\n    localStorage.removeItem(\"medicine\");\r\n  }, []);\r\n\r\n  const calculateAge = (dob) => {\r\n    const today = new Date();\r\n    const birthDate = new Date(dob);\r\n\r\n    let ageYears = today.getFullYear() - birthDate.getFullYear();\r\n    const monthDifference = today.getMonth() - birthDate.getMonth();\r\n\r\n    if (\r\n      ageYears <= 0 &&\r\n      monthDifference < 0 &&\r\n      today.getDate() < birthDate.getDate()\r\n    ) {\r\n      ageYears--;\r\n    }\r\n\r\n    if (ageYears === 0) {\r\n      return monthDifference === 0\r\n        ? \"Less than a month\"\r\n        : `${monthDifference} month(s)`;\r\n    }\r\n\r\n    return ageYears === 1 ? \"1 year\" : `${ageYears} years`;\r\n  };\r\n\r\n  const getHospitalNumber = (identifier) => {\r\n    const hospitalNumber = identifier.identifier.find(\r\n      (obj) => obj.type == \"HospitalNumber\"\r\n    );\r\n    return hospitalNumber ? hospitalNumber.value : \"\";\r\n  };\r\n\r\n  const handleRemoteData = (query) =>\r\n    new Promise((resolve, reject) => {\r\n      axios\r\n        .get(\r\n          `${baseUrl}patient?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        )\r\n        .then((response) => response)\r\n        .then((result) => {\r\n          if (result.data === \"\") {\r\n            resolve({\r\n              data: [],\r\n              page: 0,\r\n              totalCount: 0,\r\n            });\r\n          } else {\r\n            resolve({\r\n              data: result.data.records.map((row) => ({\r\n                name: [row.firstName, row.otherName, row.surname]\r\n                  .filter(Boolean)\r\n                  .join(\", \"),\r\n                id: getHospitalNumber(row.identifier),\r\n                sex:\r\n                  row.sex?.toLowerCase()?.charAt(0)?.toUpperCase() +\r\n                  row.sex?.slice(1)?.toLowerCase(),\r\n                dateOfBirth: row.dateOfBirth,\r\n                age:\r\n                  row.dateOfBirth === 0 ||\r\n                  row.dateOfBirth === undefined ||\r\n                  row.dateOfBirth === null ||\r\n                  row.dateOfBirth === \"\"\r\n                    ? 0\r\n                    : calculateAge(row.dateOfBirth),\r\n                actions: (\r\n                  <div>\r\n                    <Link\r\n                      to={{\r\n                        pathname: \"/adr-form\",\r\n                        state: {\r\n                          patientInfo: row,\r\n                        },\r\n                      }}\r\n                    >\r\n                      {/* <Button>Fill Form</Button> */}\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className=\" float-right ms-1\"\r\n                        style={{\r\n                          backgroundColor: \"rgb(153, 46, 98)\",\r\n                          fontWeight: \"bolder\",\r\n                        }}\r\n                        startIcon={<EditNoteIcon />}\r\n                      >\r\n                        Fill Form\r\n                      </Button>\r\n                    </Link>\r\n                  </div>\r\n                ),\r\n              })),\r\n              page: query.page,\r\n              totalCount: result.data.totalRecords,\r\n            });\r\n          }\r\n        });\r\n    });\r\n\r\n  return (\r\n    <>\r\n      <Container fluid>\r\n        <Card className=\"mt-4\">\r\n          <Card.Body>\r\n            <Row>\r\n              <Col>\r\n                <br />\r\n                <MaterialTable\r\n                  icons={tableIcons}\r\n                  title=\"Patient List \"\r\n                  columns={[\r\n                    {\r\n                      title: \"Name\",\r\n                      field: \"name\",\r\n                      filtering: false,\r\n                      //hidden: enablePPI,\r\n                    },\r\n                    { title: \"Hosp. Number\", field: \"id\", filtering: false },\r\n                    { title: \"Sex\", field: \"sex\", filtering: false },\r\n                    {\r\n                      title: \"Date Of Birth\",\r\n                      field: \"dateOfBirth\",\r\n                      filtering: false,\r\n                    },\r\n                    { title: \"Age\", field: \"age\", filtering: false },\r\n                    /*{ title: \"Address\", field: \"address\", filtering: false },*/\r\n                    /*{ title: \"Status\", field: \"status\", filtering: false },*/\r\n                    { title: \"\", field: \"actions\", filtering: false },\r\n                  ]}\r\n                  data={handleRemoteData}\r\n                  options={{\r\n                    headerStyle: {\r\n                      backgroundColor: \"#014d88\",\r\n                      color: \"#fff\",\r\n                    },\r\n                    searchFieldStyle: {\r\n                      width: \"200%\",\r\n                      margingLeft: \"250px\",\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: \"left\",\r\n                    pageSizeOptions: [10, 20, 100],\r\n                    pageSize: 10,\r\n                    debounceInterval: 400,\r\n                  }}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClientList;\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\ADR_Module\\src\\main\\webapp\\utils\\utilityFunctions.js",[],{"ruleId":"110","severity":1,"message":"111","line":4,"column":10,"nodeType":"112","messageId":"113","endLine":4,"endColumn":23},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"110","severity":1,"message":"118","line":2,"column":26,"nodeType":"112","messageId":"113","endLine":2,"endColumn":32},{"ruleId":"110","severity":1,"message":"119","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":20},{"ruleId":"110","severity":1,"message":"120","line":6,"column":10,"nodeType":"112","messageId":"113","endLine":6,"endColumn":20},{"ruleId":"110","severity":1,"message":"121","line":7,"column":10,"nodeType":"112","messageId":"113","endLine":7,"endColumn":14},{"ruleId":"110","severity":1,"message":"122","line":8,"column":8,"nodeType":"112","messageId":"113","endLine":8,"endColumn":14},{"ruleId":"110","severity":1,"message":"123","line":10,"column":34,"nodeType":"112","messageId":"113","endLine":10,"endColumn":41},{"ruleId":"110","severity":1,"message":"124","line":15,"column":10,"nodeType":"112","messageId":"113","endLine":15,"endColumn":24},{"ruleId":"110","severity":1,"message":"125","line":83,"column":18,"nodeType":"112","messageId":"113","endLine":83,"endColumn":27},{"ruleId":"110","severity":1,"message":"126","line":88,"column":10,"nodeType":"112","messageId":"113","endLine":88,"endColumn":17},{"ruleId":"110","severity":1,"message":"127","line":88,"column":19,"nodeType":"112","messageId":"113","endLine":88,"endColumn":29},{"ruleId":"128","severity":1,"message":"129","line":135,"column":6,"nodeType":"130","endLine":135,"endColumn":8,"suggestions":"131"},{"ruleId":"110","severity":1,"message":"132","line":139,"column":11,"nodeType":"112","messageId":"113","endLine":139,"endColumn":20},{"ruleId":"110","severity":1,"message":"133","line":167,"column":10,"nodeType":"112","messageId":"113","endLine":167,"endColumn":21},{"ruleId":"110","severity":1,"message":"134","line":167,"column":23,"nodeType":"112","messageId":"113","endLine":167,"endColumn":37},{"ruleId":"135","severity":1,"message":"136","line":228,"column":9,"nodeType":"112","messageId":"137","endLine":228,"endColumn":14},{"ruleId":"110","severity":1,"message":"123","line":10,"column":34,"nodeType":"112","messageId":"113","endLine":10,"endColumn":41},{"ruleId":"110","severity":1,"message":"138","line":13,"column":8,"nodeType":"112","messageId":"113","endLine":13,"endColumn":12},{"ruleId":"110","severity":1,"message":"139","line":14,"column":8,"nodeType":"112","messageId":"113","endLine":14,"endColumn":20},{"ruleId":"110","severity":1,"message":"124","line":15,"column":10,"nodeType":"112","messageId":"113","endLine":15,"endColumn":24},{"ruleId":"110","severity":1,"message":"125","line":79,"column":18,"nodeType":"112","messageId":"113","endLine":79,"endColumn":27},{"ruleId":"110","severity":1,"message":"140","line":157,"column":11,"nodeType":"112","messageId":"113","endLine":157,"endColumn":19},{"ruleId":"128","severity":1,"message":"141","line":248,"column":6,"nodeType":"130","endLine":248,"endColumn":8,"suggestions":"142"},{"ruleId":"110","severity":1,"message":"143","line":5,"column":10,"nodeType":"112","messageId":"113","endLine":5,"endColumn":14},{"ruleId":"110","severity":1,"message":"123","line":5,"column":34,"nodeType":"112","messageId":"113","endLine":5,"endColumn":41},{"ruleId":"128","severity":1,"message":"144","line":49,"column":6,"nodeType":"130","endLine":49,"endColumn":8,"suggestions":"145"},{"ruleId":"110","severity":1,"message":"146","line":1,"column":38,"nodeType":"112","messageId":"113","endLine":1,"endColumn":49},{"ruleId":"110","severity":1,"message":"147","line":2,"column":8,"nodeType":"112","messageId":"113","endLine":2,"endColumn":13},{"ruleId":"110","severity":1,"message":"148","line":4,"column":10,"nodeType":"112","messageId":"113","endLine":4,"endColumn":15},{"ruleId":"110","severity":1,"message":"149","line":4,"column":24,"nodeType":"112","messageId":"113","endLine":4,"endColumn":31},{"ruleId":"110","severity":1,"message":"143","line":5,"column":10,"nodeType":"112","messageId":"113","endLine":5,"endColumn":14},{"ruleId":"110","severity":1,"message":"123","line":5,"column":34,"nodeType":"112","messageId":"113","endLine":5,"endColumn":41},{"ruleId":"110","severity":1,"message":"150","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":25},{"ruleId":"151","severity":1,"message":"152","line":6,"column":10,"nodeType":"153","messageId":"154","endLine":6,"endColumn":24,"fix":"155"},{"ruleId":"151","severity":1,"message":"152","line":8,"column":10,"nodeType":"153","messageId":"154","endLine":8,"endColumn":24,"fix":"156"},{"ruleId":"110","severity":1,"message":"157","line":51,"column":10,"nodeType":"112","messageId":"113","endLine":51,"endColumn":16},{"ruleId":"110","severity":1,"message":"158","line":51,"column":18,"nodeType":"112","messageId":"113","endLine":51,"endColumn":27},{"ruleId":"110","severity":1,"message":"159","line":52,"column":10,"nodeType":"112","messageId":"113","endLine":52,"endColumn":21},{"ruleId":"110","severity":1,"message":"160","line":52,"column":23,"nodeType":"112","messageId":"113","endLine":52,"endColumn":37},{"ruleId":"161","severity":1,"message":"162","line":85,"column":25,"nodeType":"163","messageId":"164","endLine":85,"endColumn":27},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["165"],"no-negated-in-lhs",["166"],"'Router' is defined but never used.","'makeStyles' is defined but never used.","'FaUserPlus' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'Spinner' is defined but never used.","'ToastContainer' is defined but never used.","'setSaving' is assigned a value but never used.","'isValid' is assigned a value but never used.","'setIsValid' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'GetCountry', 'adrOutcomes', and 'adrRelevant'. Either include them or remove the dependency array.","ArrayExpression",["167"],"'dateParts' is assigned a value but never used.","'severeDrugs' is assigned a value but never used.","'setSevereDrugs' is assigned a value but never used.","no-const-assign","'value' is constant.","const","'Drug' is defined but never used.","'DrugMedicine' is defined but never used.","'response' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'GetCountry', 'adrOutcomes', 'adrRelevant', and 'getADRbyId'. Either include them or remove the dependency array.",["168"],"'Form' is defined but never used.","React Hook useEffect has a missing dependency: 'adrDrugs'. Either include it or remove the dependency array.",["169"],"'useCallback' is defined but never used.","'axios' is defined but never used.","'token' is defined but never used.","'baseUrl' is defined but never used.","'useState' is defined but never used.","no-useless-rename","Import token unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"170","text":"171"},{"range":"172","text":"171"},"'upload' is assigned a value but never used.","'setUpload' is assigned a value but never used.","'permissions' is assigned a value but never used.","'setPermissions' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},[251,265],"token",[357,371],"Update the dependencies array to be: [GetCountry, adrOutcomes, adrRelevant]",{"range":"179","text":"180"},"Update the dependencies array to be: [GetCountry, adrOutcomes, adrRelevant, getADRbyId]",{"range":"181","text":"182"},"Update the dependencies array to be: [adrDrugs]",{"range":"183","text":"184"},[3615,3617],"[GetCountry, adrOutcomes, adrRelevant]",[7885,7887],"[GetCountry, adrOutcomes, adrRelevant, getADRbyId]",[1421,1423],"[adrDrugs]"]